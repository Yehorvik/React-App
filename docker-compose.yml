version: '3.9'

services:
  
  db:
    image: postgres
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    container_name: postgredb
    env_file: .env
    volumes:
      - ./pgdata:/var/lib/postgresql/data

    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}


  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
      
  backend:
    build:
      context: ./project-name
      dockerfile: Dockerfile
    container_name: nest-docker-postgres
    # volumes:
    #   - ./project-name:/svr/app
    #   - "./scripts/wait.sh:/wait.sh"
    #   - /svr/app/node_modules
    env_file: .env
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_NAME: ${POSTGRES_NAME}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - db
    # networks:
    #   - bp-network
    
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    env_file: .env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    # volumes:
    #   - "./frontend/src:/usr/src/app/src"
    # networks:
    #   - bp-network
    command: "npm start"
    
  pgadmin-portal:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin-portal
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db
    # networks:
    #   - bp-network

volumes:
  pgdata:
    driver: local
  pgadmin:


#   version: "3.9"
# services:
  
# backend:
#     container_name: backend
#     build:
#       context: 
#       dockerfile: Dockerfile
#     restart: always
#     env_file: .env
    
#     networks:
#       - bp-network
#     ports:
      
#     depends_on:
#       - bp-pg-db
#     links:
#       - bp-pg-db
# bp-pg-db:
#     image: postgres:12-alpine
#     restart: always
#     container_name: bp-pg-db
#     env_file:
#       - .env
#     environment:
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#       PGDATA: /var/lib/postgresql/data
#       POSTGRES_USER: ${DB_USER}
#       POSTGRES_DB: ${DB_NAME}
#     ports:
#       - "${DB_PORT}:${DB_PORT}"
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     networks:
#       - bp-network

# volumes:
#   
#   pgadmin:
